// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UdemyAPI.Persistence.Contexts;

#nullable disable

namespace UdemyAPI.Persistence.Migrations
{
    [DbContext(typeof(UdemyDbContext))]
    [Migration("20240909104330_mig_initial2")]
    partial class mig_initial2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UdemyAPI.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ac6ee9f-cec6-46d0-b7bc-29b30d285ab2"),
                            CategoryName = "Yazılım",
                            CreatedDate = new DateTime(2024, 9, 9, 10, 43, 30, 692, DateTimeKind.Utc).AddTicks(3918),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("88536d07-6be5-44ea-9723-5b40acfbfe7e"),
                            CategoryName = "Finans",
                            CreatedDate = new DateTime(2024, 9, 9, 10, 43, 30, 692, DateTimeKind.Utc).AddTicks(3942),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("a0f89c38-7ce0-4835-8878-3e88bdff4c8e"),
                            CategoryName = "Kişisel Gelişim",
                            CreatedDate = new DateTime(2024, 9, 9, 10, 43, 30, 692, DateTimeKind.Utc).AddTicks(3943),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("UdemyAPI.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TrainerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TrainerId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("UdemyAPI.Domain.Entities.Lesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LessonVideoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("UdemyAPI.Domain.Entities.Trainer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("NameSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Trainers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("78ec94c9-705f-4a73-b251-d12b0f8db354"),
                            About = "Test",
                            CreatedDate = new DateTime(2024, 9, 9, 10, 43, 30, 692, DateTimeKind.Utc).AddTicks(5928),
                            ImageUrl = "testurl",
                            IsDeleted = false,
                            NameSurname = "Gencay Yildiz"
                        },
                        new
                        {
                            Id = new Guid("8a2a6d67-061e-4bb5-9087-3a65e5643bc8"),
                            About = "Test2",
                            CreatedDate = new DateTime(2024, 9, 9, 10, 43, 30, 692, DateTimeKind.Utc).AddTicks(5943),
                            ImageUrl = "testurl",
                            IsDeleted = false,
                            NameSurname = "Murat Yucedag"
                        },
                        new
                        {
                            Id = new Guid("fad3a3d6-3057-4e66-adc6-40d81a3d1ae1"),
                            About = "Test3",
                            CreatedDate = new DateTime(2024, 9, 9, 10, 43, 30, 692, DateTimeKind.Utc).AddTicks(5944),
                            ImageUrl = "testurl",
                            IsDeleted = false,
                            NameSurname = "Maximillian Shwarzmuller"
                        });
                });

            modelBuilder.Entity("UdemyAPI.Domain.Entities.Course", b =>
                {
                    b.HasOne("UdemyAPI.Domain.Entities.Category", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UdemyAPI.Domain.Entities.Trainer", "Trainer")
                        .WithMany("Courses")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("UdemyAPI.Domain.Entities.Lesson", b =>
                {
                    b.HasOne("UdemyAPI.Domain.Entities.Course", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("UdemyAPI.Domain.Entities.Category", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("UdemyAPI.Domain.Entities.Course", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("UdemyAPI.Domain.Entities.Trainer", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
